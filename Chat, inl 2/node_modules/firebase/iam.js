window.addEventListener('load', function(event){
    
let signedin = false;
let signedout = true;
let getUserBtn = document.getElementById('getuserbutton');

let deleteusersbtn = document.getElementById('deleteusers');
    
let sessionID;
    
let getOnlineUsersbtn = document.getElementById('getonlineusersbtn');

    
     /*
    let accounts = [];

    class User {

         constructor(username, password, firstname, surname, age, position, favteam){

             this.username = username,
             this.password = password,
             this.firstname = firstname,
             this.surname = surname,
             this.age = age,
             this.position = position,
             this.favteam = favteam;

         }

    }


    var Niklas = new User('Nik', 'nn', 'Niklas', 'Nauber', 16, 'Striker', 'Barcelona');
*/
    



    
        function deleteUsers(){
      firebase.database().ref('users/').set({});
        console.log('Users deleted')

    };
    
    deleteusersbtn.addEventListener('click', deleteUsers);

    function getUser(){
        
        let useridValue = document.getElementById('getuserid').value;
        let userteamValue = document.getElementById('getuserteam').value;
    return firebase.database().ref('/users/'/* + useridValue*/).once('value').then(function(snapshot) {
        
        
        for(var prop in snapshot.val()){
            //console.log(snapshot.val()[prop].email)
            
            if(snapshot.val()[prop].email==useridValue && snapshot.val()[prop].team==userteamValue){
                console.log('Du lyckades!')
                console.log(snapshot.val()[prop].team);
            }
            
            else{
                console.log('User was not found.')
            }
            
        }
     
    });
    }

    getUserBtn.addEventListener('click', getUser);


    
    
function loginAuth(emailauth, passwordauth){
    
firebase.auth().signInWithEmailAndPassword(emailauth, passwordauth).catch(function(error) {
  // Handle Errors here.
  var errorCode = error.code;
  var errorMessage = error.message;
  // ...
    console.log(errorCode, errorMessage);
   
});
     console.log(emailauth + ' is signed in');
    
    };
    
    
    function onlineTrueFalse(userid, bool) {


  firebase.database().ref().child('users').child(userid).update({online:bool});
}

function logIn(emaillogin, passwordlogin){

        let userid;
        firebase.database().ref('/users/'/* + useridValue*/).once('value').then(function(snapshot) {

        for(var prop in snapshot.val()){

            if(snapshot.val()[prop].email==emaillogin){
                userid = prop;
                sessionID = prop;
                
                storeLocally('sessionUser', sessionID)
                localStorage.setItem("lastname", "Smith");
                console.log(userid + '=userid')
                
                console.log('Before update userid: ' + userid)
    
                onlineTrueFalse(userid, true);
                
            }
            
            else{
                console.log('User was not found.')
            }
            
        }
     
    });
    
console.log('Before loginAuth() userid: ' + userid)
loginAuth(emaillogin, passwordlogin)


    
};
    
let loginbtn = document.getElementById('loginbtn');
    loginbtn.addEventListener('click', function(){
        
        logIn(document.getElementById('loginemail').value, document.getElementById('loginpassword').value);
    
    });
    
//------------------------------CHECKS IF LOGGED IN OR LOGGED OUT------------------------------------------------------//
    let userinout;
    firebase.auth().onAuthStateChanged(function(user) {

  if (user) {
      
      userinout = user.email;
      let userid;
                  firebase.database().ref('/users/').once('value').then(function(snapshot) {
        
                for(var prop in snapshot.val()){

            if(snapshot.val()[prop].email==userinout){
                userid = prop;
                sessionID = prop;
                console.log(userid + '=userid, ' + sessionID + '=sessionID')
                
                console.log('Before update userid: ' + userid)
    
                onlineTrueFalse(userid, true);
                
            }
     
            
        }
            });
      console.log('user is signed in: ' + user.email);
                  
  } else {
      
      
      console.log('signed out: ' + userinout)
                  
  }
});
    

    
    //------------------------------------------------------
    
    function signOut(){
         let userid;
 console.log(sessionID)
           onlineTrueFalse(sessionID, false);                                                                         
            
  firebase.auth().signOut().then(function() {
  console.log('Signed Out: ' + sessionID);
    sessionID=undefined;
        
}, function(error) {
  console.error('Sign Out Error', error);
});
    };
    
    
    
    let signOutbtn = document.getElementById('signoutbtn')
    signOutbtn.addEventListener('click', signOut);
    
    
let onlineusersdiv = document.getElementById('showonlineusers');
    
    function getOnlineUsers(){
        
        let stringOfUsers=''
        
        firebase.database().ref('/users/').once('value').then(function(snapshot) {
            
            for(var user in snapshot.val()){
                
                if(snapshot.val()[user].online==true){
                    console.log(user)
                    
                    stringOfUsers+= user + ' <br>'
                    console.log(stringOfUsers)
                    onlineusersdiv.innerHTML=stringOfUsers;
                }
                
             else{
                 onlineusersdiv.innerHTML=''
                 
             }
                
            }
        
  
});
        
        
       
    }
    
    getOnlineUsersbtn.addEventListener('click', getOnlineUsers);
    
    //getOnlineUsers()
    
    
    function updateProfile(sessionIDupdate, foot, position, favouriteplayer){
        
    firebase.database().ref().child('users').child(sessionIDupdate).update({foot:foot, position: position, 'Favourite player': favouriteplayer});

        
    };
    
    let footinput = document.getElementById('footinput');
    let positioninput = document.getElementById('positioninput');
    let favplayerinput = document.getElementById('favplayerinput');
    
    let updateProfileBtn = document.getElementById('updateprofilebtn')
    updateProfileBtn.addEventListener('click', function(){
        
        console.log(sessionID)
        
        updateProfile(localStorage.getItem('sessionUser'), footinput.value, positioninput.value, favplayerinput.value);
        
    });
    
    function storeLocally(objectname, objectvalue){
        
        if(typeof(Storage) !== "undefined") {
            
            //Store
            localStorage.setItem(objectname, objectvalue);
            //Retrieve
            console.log(localStorage.getItem(objectname));
            
             }
            
            else{
                
                console.log('Sorry, browser does not support Web Storage.')
            }
            
       
        
    }


})//--------------------------------WINDOW ON LOAD ENDS--------------------------------------------------//






